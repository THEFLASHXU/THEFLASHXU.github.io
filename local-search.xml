<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Java Web开发中MVC设计模式简介以及DAO层、Service层和Controller层的区别</title>
    <link href="/2022/03/24/Java-Web%E5%BC%80%E5%8F%91%E4%B8%ADMVC%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E7%AE%80%E4%BB%8B%E4%BB%A5%E5%8F%8ADAO%E5%B1%82%E3%80%81Service%E5%B1%82%E5%92%8CController%E5%B1%82%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <url>/2022/03/24/Java-Web%E5%BC%80%E5%8F%91%E4%B8%ADMVC%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E7%AE%80%E4%BB%8B%E4%BB%A5%E5%8F%8ADAO%E5%B1%82%E3%80%81Service%E5%B1%82%E5%92%8CController%E5%B1%82%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
    
    <content type="html"><![CDATA[<h1 id="Java-Web开发中MVC设计模式简介以及DAO层、Service层和Controller层的区别"><a href="#Java-Web开发中MVC设计模式简介以及DAO层、Service层和Controller层的区别" class="headerlink" title="Java Web开发中MVC设计模式简介以及DAO层、Service层和Controller层的区别"></a>Java Web开发中MVC设计模式简介以及DAO层、Service层和Controller层的区别</h1><h2 id="一、有关MVC设计模式"><a href="#一、有关MVC设计模式" class="headerlink" title="一、有关MVC设计模式"></a>一、有关MVC设计模式</h2><p>目前主流在Java Web应用中应用的最广泛的设计模式便是MVC模式，目前的主流Web框架大多也是基于MVC设计模式所编写的。</p><p>所谓MVC，即Model-View-Controller。</p><ol><li><p>Model层：Model指模型部分，一般在应用中Model层包括业务处理层和数据访问层。数据访问层主要是对数据库的一些操作的封装。业务处理层应用JavaBean构建， JavaBean主要是用作将从View层获取的数据和数据库的数据进行桥接。除却JavaBean以外，若想构建分布式应用系统，可以应用EJB组件进行业务逻辑层的构建。</p></li><li><p>Controller层：Controller指控制部分，一般是对View层提交的请求为其设置对应的Servlet进行特定功能的处理，这里的进行特定功能的处理一般是编写在Model中的业务处理层中的。Controller一般只是在Web应用中充当一个中介者的作用。</p></li><li><p>View层：View指视图部分，这一部分的内容是展示给用户实际进行交互的，通常使用JSP和HTML进行构建（个人比较喜欢以HTML嵌入JSP的方式来构建网页）。</p></li></ol><p>综上来说，一个小型完整的基于MVC设计模式的Web应用程序的处理流程应该如下：</p><img src="/2022/03/24/Java-Web%E5%BC%80%E5%8F%91%E4%B8%ADMVC%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E7%AE%80%E4%BB%8B%E4%BB%A5%E5%8F%8ADAO%E5%B1%82%E3%80%81Service%E5%B1%82%E5%92%8CController%E5%B1%82%E7%9A%84%E5%8C%BA%E5%88%AB/1.png" class="" title="This is an image"><p>  <strong>由上面的图中我们可以看出，用户在客户端（Web应用的客户端即为浏览器）中发出请求的时候，请求首先由View层的JSP&#x2F;HTML将HTTP请求传给Controller层对应的Servlet，然后由Servlet负责调用Model层中的业务逻辑处理部分(service)进行要求的处理，处理期间如果设计数据库的操作，则与数据库进行操作(DAO)，最后全部操作结束之后，由业务逻辑层将结果发给控制层，控制层以HTTP响应的形式将结果发送回客户端。</strong></p><h2 id="二、代码编写中MVC三层的内容"><a href="#二、代码编写中MVC三层的内容" class="headerlink" title="二、代码编写中MVC三层的内容"></a>二、代码编写中MVC三层的内容</h2><h3 id="1-View层的编写"><a href="#1-View层的编写" class="headerlink" title="(1) View层的编写"></a>(1) View层的编写</h3><p>View层主要是由jsp、HTML编写而成。</p><h3 id="2-Controller层的编写"><a href="#2-Controller层的编写" class="headerlink" title="(2) Controller层的编写"></a>(2) Controller层的编写</h3><p>Controller层主要编写接受View层请求的Servlet</p><h3 id="3-Model层的编写"><a href="#3-Model层的编写" class="headerlink" title="(3) Model层的编写"></a>(3) Model层的编写</h3><p>Model层在具体的编写中包括dao层和bean层还有service层。</p><p><strong>1. bean层：bean层中编写数据模型类，示例代码如下</strong></p><figure class="highlight plaintext"><figcaption><span>class UserBean &#123;</span></figcaption><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></div></td><td class="code"><pre><code class="hljs public">    private String userName;<br>    private String passWord;<br>    private String answer;<br>    public void set_userName(String userName) &#123;<br>        this.userName = userName;<br>    &#125;<br>    public void set_passWord(String passWord) &#123;<br>        this.passWord = passWord;<br>    &#125;<br>    public void set_answer(String answer) &#123;<br>        this.answer = answer;<br>    &#125;<br>    public String get_userName() &#123;<br>        return userName;<br>    &#125;<br>    public String get_passWord() &#123;<br>        return passWord;<br>    &#125;<br>    public String get_answer() &#123;<br>        return answer;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p> <strong>2. DAO层负责与数据库进行交互。</strong></p><p><strong>3. service层：service层负责编写具体的业务逻辑，对于大型项目来说，业务逻辑层一般需要进行很多的业务处理</strong></p><h2 id="三、总结"><a href="#三、总结" class="headerlink" title="三、总结"></a>三、总结</h2><ul><li><p><strong>DAO层</strong>：DAO层叫数据访问层，全称为data access object，属于一种比较底层，比较基础的操作，具体到对于某个表的增删改查，也就是说某个DAO一定是和数据库的某一张表一一对应的，其中封装了增删改查基本操作，建议DAO只做原子操作，增删改查。</p></li><li><p><strong>Service层</strong>：Service层叫服务层，被称为服务，粗略的理解就是对一个或多个DAO进行的再次封装，封装成一个服务，所以这里也就不会是一个原子操作了，需要事物控制。</p></li><li><p><strong>Controler层</strong>：Controler负责请求转发，接受页面过来的参数，传给Service处理，接到返回值，再传给页面。</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>JavaWeb 笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>技术笔记</tag>
      
      <tag>JavaWeb</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Windows10如何彻底卸载Mysql8.0</title>
    <link href="/2022/03/22/Windows10%E5%A6%82%E4%BD%95%E5%BD%BB%E5%BA%95%E5%8D%B8%E8%BD%BDMysql8-0/"/>
    <url>/2022/03/22/Windows10%E5%A6%82%E4%BD%95%E5%BD%BB%E5%BA%95%E5%8D%B8%E8%BD%BDMysql8-0/</url>
    
    <content type="html"><![CDATA[<h1 id="Windows10如何彻底卸载Mysql8-0"><a href="#Windows10如何彻底卸载Mysql8-0" class="headerlink" title="Windows10如何彻底卸载Mysql8.0"></a>Windows10如何彻底卸载Mysql8.0</h1><blockquote><p>最近在做小项目的时候遇到了Mysql和jar包版本不兼容的问题，于是打算安装一个低版本的MySQL，但是在同一台计算机上只能存在一个版本的MySQL，于是乎需要卸载MySQL8，本篇文章记录卸载的方式</p></blockquote><h2 id="1-停止MySQL的服务"><a href="#1-停止MySQL的服务" class="headerlink" title="1.停止MySQL的服务"></a>1.停止MySQL的服务</h2><p>启动任务管理器—&gt;选择服务—-&gt;找到MySQL—-&gt;右键停止</p><img src="/2022/03/22/Windows10%E5%A6%82%E4%BD%95%E5%BD%BB%E5%BA%95%E5%8D%B8%E8%BD%BDMysql8-0/1.png" class="" title="This is an image"><p>或者</p><p>打开运行，输入services.msc，找到MySQL，右键停止。</p><img src="/2022/03/22/Windows10%E5%A6%82%E4%BD%95%E5%BD%BB%E5%BA%95%E5%8D%B8%E8%BD%BDMysql8-0/2.png" class="" title="This is an image"><p>如果有多个MySQL服务，也全部都要停掉</p><h2 id="2-卸载MySQL相关的所有软件"><a href="#2-卸载MySQL相关的所有软件" class="headerlink" title="2.卸载MySQL相关的所有软件"></a>2.卸载MySQL相关的所有软件</h2><p>打开看控制面板—-&gt;卸载程序—-&gt;卸载与MySQL相关的所有组件</p><img src="/2022/03/22/Windows10%E5%A6%82%E4%BD%95%E5%BD%BB%E5%BA%95%E5%8D%B8%E8%BD%BDMysql8-0/3.png" class="" title="This is an image"><h2 id="3-删除MySQL安装目录下的MySQL文件夹"><a href="#3-删除MySQL安装目录下的MySQL文件夹" class="headerlink" title="3.删除MySQL安装目录下的MySQL文件夹"></a>3.删除MySQL安装目录下的MySQL文件夹</h2><p>如果在其他文件夹下也发现MySQL文件，也将其删除，比如<strong>C:\Program Files</strong>等目录，以及一些隐藏目录，比如programData文件夹，遇到开启查看隐藏文件的选项才能看到</p><img src="/2022/03/22/Windows10%E5%A6%82%E4%BD%95%E5%BD%BB%E5%BA%95%E5%8D%B8%E8%BD%BDMysql8-0/4.png" class="" title="This is an image"><h2 id="4-打开注册表编辑器，删除注册表"><a href="#4-打开注册表编辑器，删除注册表" class="headerlink" title="4.打开注册表编辑器，删除注册表"></a>4.打开注册表编辑器，删除注册表</h2><p>win + R快捷键，输入regedi，回车，打开注册表编辑器<br>删除注册表相关文件</p><p>删除 </p><ul><li><p>HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Services\Eventlog\Application\MySQL 文件夹</p></li><li><p>HKEY_LOCAL_MACHINE\SYSTEM\ControlSet002\Services\Eventlog\Application\MySQL 文件夹。</p></li><li><p>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Eventlog\Application\MySQL文件夹。</p></li></ul><h2 id="5-额外工作"><a href="#5-额外工作" class="headerlink" title="5.额外工作"></a>5.额外工作</h2><p>一般完成以上工作之后就可以成功卸载mysql了，如果此时直接安装其他版本的mysql也可能出现报错的问题，此时我们需要重启电脑，一般就能解决问题了。</p>]]></content>
    
    
    <categories>
      
      <category>MySQL笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MySQL</tag>
      
      <tag>技术笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>解决Hexo文章内图片无法显示的问题</title>
    <link href="/2022/03/20/%E8%A7%A3%E5%86%B3Hexo%E6%96%87%E7%AB%A0%E5%86%85%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <url>/2022/03/20/%E8%A7%A3%E5%86%B3Hexo%E6%96%87%E7%AB%A0%E5%86%85%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA%E7%9A%84%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h1 id="解决Hexo文章内图片无法显示的问题"><a href="#解决Hexo文章内图片无法显示的问题" class="headerlink" title="解决Hexo文章内图片无法显示的问题"></a>解决Hexo文章内图片无法显示的问题</h1><p>问题描述：按照网上的教程一步一步配置好Hexo后，发现自己使用markdown语法引入的图片无法在自己的博客页面浏览，打开F12对HTML代码进行查看的时候发现是路径问题。</p><h2 id="方式1"><a href="#方式1" class="headerlink" title="方式1"></a>方式1</h2><p>将<code>_config.yml</code>文件中的配置项<code>post_asset_folder</code>设为true后，执行命令<code>$ hexo new post_name</code>，在<code>source/_posts</code>中会生成文章<code>post_name.md</code>和同名文件夹<code>post_name</code>。将图片资源放在<code>post_name</code>中，文章就可以使用相对路径引用图片资源了。</p><p><strong><img src="/2022/03/20/%E8%A7%A3%E5%86%B3Hexo%E6%96%87%E7%AB%A0%E5%86%85%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA%E7%9A%84%E9%97%AE%E9%A2%98/1.png" class=""></strong></p><p>将此目录结构上传到github会发现，原本不和文章.md在同一文件下的图片，在github中竟然跑到一个文件夹去了</p><p><strong><img src="/2022/03/20/%E8%A7%A3%E5%86%B3Hexo%E6%96%87%E7%AB%A0%E5%86%85%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA%E7%9A%84%E9%97%AE%E9%A2%98/2.png" class=""></strong></p><p>这就导致我们用markdown语法引入图片的时候所写的路径和html中引用的路径不一样，若现在还尝试使用markdown语法，那需要以github仓库中的路径为准，比如将<strong>“ 图片文件夹&#x2F;1.jpg ”改为“ 1.jpg ”</strong></p><p><strong>上述是markdown的引用方式，图片只能在文章中显示，但无法在首页中正常显示。</strong></p><p>下面来介绍方式2</p><h2 id="方式2"><a href="#方式2" class="headerlink" title="方式2"></a>方式2</h2><p>如果希望图片在文章和首页中同时显示，可以使用标签插件语法。</p><p><code>&#123;% asset_img image.jpg This is an image %&#125;</code></p><p>这里的image.jpg需要按需修改成和文章同名文件夹内的真正图片名称，而不是路径名称， 请注意区分。</p><h2 id="方式3"><a href="#方式3" class="headerlink" title="方式3"></a>方式3</h2><p>这个方式我没有自己试过，现整理如下</p><h3 id="绝对路径"><a href="#绝对路径" class="headerlink" title="绝对路径"></a>绝对路径</h3><p>当Hexo项目中只用到少量图片时，可以将图片统一放在<code>source/images</code>文件夹中，通过markdown语法访问它们。</p><figure class="highlight arcade"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs arcade">![](<span class="hljs-regexp">/images/im</span>age.jpg)<br></code></pre></td></tr></table></figure><p>图片既可以在首页内容中访问到，也可以在文章正文中访问到。</p>]]></content>
    
    
    <categories>
      
      <category>Hexo笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>技术笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在vscode中设置用ctrl+鼠标滚轮缩放字体</title>
    <link href="/2022/03/20/%E5%9C%A8vscode%E4%B8%AD%E8%AE%BE%E7%BD%AE%E7%94%A8ctrl-%E9%BC%A0%E6%A0%87%E6%BB%9A%E8%BD%AE%E7%BC%A9%E6%94%BE%E5%AD%97%E4%BD%93/"/>
    <url>/2022/03/20/%E5%9C%A8vscode%E4%B8%AD%E8%AE%BE%E7%BD%AE%E7%94%A8ctrl-%E9%BC%A0%E6%A0%87%E6%BB%9A%E8%BD%AE%E7%BC%A9%E6%94%BE%E5%AD%97%E4%BD%93/</url>
    
    <content type="html"><![CDATA[<h1 id="在vscode中设置用ctrl-鼠标滚轮缩放字体"><a href="#在vscode中设置用ctrl-鼠标滚轮缩放字体" class="headerlink" title="在vscode中设置用ctrl+鼠标滚轮缩放字体"></a>在vscode中设置用ctrl+鼠标滚轮缩放字体</h1><h2 id="步骤一"><a href="#步骤一" class="headerlink" title="步骤一"></a>步骤一</h2><p>点击【文件】【首选项】【设置】</p><h2 id="步骤二"><a href="#步骤二" class="headerlink" title="步骤二"></a>步骤二</h2><p>在上方搜索栏搜索关键字setting打开设置配置文件</p><img src="/2022/03/20/%E5%9C%A8vscode%E4%B8%AD%E8%AE%BE%E7%BD%AE%E7%94%A8ctrl-%E9%BC%A0%E6%A0%87%E6%BB%9A%E8%BD%AE%E7%BC%A9%E6%94%BE%E5%AD%97%E4%BD%93/%E6%88%AA%E5%9B%BE1.png" class="" title="This is an example image"><h2 id="步骤三"><a href="#步骤三" class="headerlink" title="步骤三"></a>步骤三</h2><p>在setting.json中加入一行语句：</p><figure class="highlight json"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs json"><span class="hljs-attr">&quot;editor.mouseWheelZoom&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-keyword">true</span><br></code></pre></td></tr></table></figure><img src="/2022/03/20/%E5%9C%A8vscode%E4%B8%AD%E8%AE%BE%E7%BD%AE%E7%94%A8ctrl-%E9%BC%A0%E6%A0%87%E6%BB%9A%E8%BD%AE%E7%BC%A9%E6%94%BE%E5%AD%97%E4%BD%93/2.png" class="" title="This is an example image"><p>接着就可以用ctrl+滚轮调整编辑区字体大小了</p>]]></content>
    
    
    <categories>
      
      <category>vsCode 笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>vscode</tag>
      
      <tag>技术笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
